textarea.error {
	background: #fbe3e4;
	border: 1px solid #fbc2c4;
	color: #8a1f11;
}

div.panel-btns.pull-right {
	padding: 10px 20px 9px;
}

#content {
	position: relative;
}

.section {
	background: #fff;
}

.hbox.stretch {
	height: 100%;
	margin: 0px 0 0;
}

.hbox {
	display: table;
	table-layout: fixed;
	border-collapse: collapse;
	border-spacing: 0;
	width: 100%;
	/* overflow: hidden; */
}

.hbox>.details-div {
	display: table-cell;
	vertical-align: top;
	height: 100%;
	padding: 0;
	float: none;
	/* overflow: hidden; */
}

#side-content {
	border: 1px;
	border-color: red;
	border-style: solid;
}

.my-show-hide-animation.ng-hide-add {
	-webkit-animation: bounceOut .5s;
	animation: bounceOut .5s;
	/* remember to add this */
	display: block !important;
	opacity: 1;
}

.my-show-hide-animation.ng-hide-remove {
	-webkit-animation: bounceIn .5s;
	animation: bounceIn .5s;
}

.my-show-hide-animation.ng-hide {
	opacity: 0;
}

.box-tools {
	margin: 10px;
}

.questionLabel {
	border-radius: 1.25em;
}

.qlister {
	margin-right: 10px;
}

.row-merge {
	position: relative;
	margin: 0 !important;
}

.strong {
	font-weight: bold;
}

.text-large {
	font-size: 35px !important;
	line-height: 40px !important;
}

#loading {
	list-style: none;
	margin: 250px auto;
	text-align: center;
	width: 400px;
}

/* Loading animation inspired by http://codepen.io/joni/details/FiKsd */
@
keyframes loader { 50% {
	height: 6px;
	margin-top: 74px;
	opacity: .1;
}

}
.bar {
	height: 80px;
	width: 6px;
	border-radius: 3px;
	background: #333;
	display: inline-block;
	margin: 0 2px;
	animation: loader 1.3s infinite;
}

.bar:nth-child(1) {
	animation-delay: .1s;
}

.bar:nth-child(2) {
	animation-delay: .2s;
}

.bar:nth-child(4) {
	animation-delay: .4s;
}

.bar:nth-child(5) {
	animation-delay: .5s;
}

.bar:nth-child(6) {
	animation-delay: .6s;
}

.bar:nth-child(7) {
	animation-delay: .7s;
}

.bar:nth-child(8) {
	animation-delay: .8s;
}

.bar:nth-child(9) {
	animation-delay: .9s;
}

.bar:nth-child(10) {
	animation-delay: 1s;
}

/*
 * CSS TOGGLE SWITCHES
 * Unlicense
 *
 * Ionu»õ Colceriu - ghinda.net
 * https://github.com/ghinda/css-toggle-switch
 *
 */
/* Toggle Switches
 */
/* Shared
 */
/* Checkbox
 */
/* Radio Switch
 */
/* Hide by default
 */
.switch-toggle a,.switch-light span span {
	display: none;
}

/* We can't test for a specific feature,
 * so we only target browsers with support for media queries.
 */
@media only screen {
	/* Checkbox switch
	 */
	/* Radio switch
	 */
	/* Standalone Themes */
	/* Candy Theme
	 * Based on the "Sort Switches / Toggles (PSD)" by Ormal Clarck
	 * http://www.premiumpixels.com/freebies/sort-switches-toggles-psd/
	 */
	/* Android Theme
	 */
	/* iOS Theme
	 */
	.switch-light {
		display: block;
		height: 30px;
		/* Outline the toggles when the inputs are focused
	 */
		position: relative;
		overflow: visible;
		padding: 0;
		margin-left: 100px;
		/* Position the label over all the elements, except the slide-button (<a>)
	 * Clicking anywhere on the label will change the switch-state
	 */
		/* Don't hide the input from screen-readers and keyboard access
	 */
	}
	.switch-light * {
		-webkit-box-sizing: border-box;
		-moz-box-sizing: border-box;
		box-sizing: border-box;
	}
	.switch-light a {
		display: block;
		-webkit-transition: all 0.3s ease-out;
		-moz-transition: all 0.3s ease-out;
		transition: all 0.3s ease-out;
	}
	.switch-light label,.switch-light>span {
		line-height: 30px;
		vertical-align: middle;
	}
	.switch-light input:focus ~ a,.switch-light input:focus+label {
		outline: 1px dotted #888;
	}
	.switch-light label {
		position: relative;
		z-index: 3;
		display: block;
		width: 100%;
	}
	.switch-light input {
		position: absolute;
		opacity: 0;
		z-index: 5;
	}
	.switch-light input:checked ~ a {
		right: 0%;
	}
	.switch-light>span {
		position: absolute;
		left: -100px;
		width: 100%;
		margin: 0;
		padding-right: 100px;
		text-align: left;
	}
	.switch-light>span span {
		position: absolute;
		top: 0;
		left: 0;
		z-index: 5;
		display: block;
		width: 50%;
		margin-left: 100px;
		text-align: center;
	}
	.switch-light>span span:last-child {
		left: 50%;
	}
	.switch-light a {
		position: absolute;
		right: 50%;
		top: 0;
		z-index: 4;
		display: block;
		width: 50%;
		height: 100%;
		padding: 0;
	}
	.switch-toggle {
		display: block;
		height: 30px;
		/* Outline the toggles when the inputs are focused
	 */
		position: relative;
		/* For callout panels in foundation
	 */
		padding: 0 !important;
		/* Generate styles for the multiple states */
	}
	.switch-toggle * {
		-webkit-box-sizing: border-box;
		-moz-box-sizing: border-box;
		box-sizing: border-box;
	}
	.switch-toggle a {
		display: block;
		-webkit-transition: all 0.3s ease-out;
		-moz-transition: all 0.3s ease-out;
		transition: all 0.3s ease-out;
	}
	.switch-toggle label,.switch-toggle>span {
		line-height: 30px;
		vertical-align: middle;
	}
	.switch-toggle input:focus ~ a,.switch-toggle input:focus+label {
		outline: 1px dotted #888;
	}
	.switch-toggle input {
		position: absolute;
		opacity: 0;
	}
	.switch-toggle input+label {
		position: relative;
		z-index: 2;
		float: left;
		width: 50%;
		height: 100%;
		margin: 0;
		text-align: center;
	}
	.switch-toggle a {
		position: absolute;
		top: 0;
		left: 0;
		padding: 0;
		z-index: 1;
		width: 50%;
		height: 100%;
	}
	.switch-toggle input:last-of-type:checked ~ a {
		left: 50%;
	}
	.switch-toggle.switch-3 label,.switch-toggle.switch-3 a {
		width: 33.33333%;
	}
	.switch-toggle.switch-3 input:checked:nth-of-type(2) ~ a {
		left: 33.33333%;
	}
	.switch-toggle.switch-3 input:checked:last-of-type ~ a {
		left: 66.66667%;
	}
	.switch-toggle.switch-4 label,.switch-toggle.switch-4 a {
		width: 25%;
	}
	.switch-toggle.switch-4 input:checked:nth-of-type(2) ~ a {
		left: 25%;
	}
	.switch-toggle.switch-4 input:checked:nth-of-type(3) ~ a {
		left: 50%;
	}
	.switch-toggle.switch-4 input:checked:last-of-type ~ a {
		left: 75%;
	}
	.switch-toggle.switch-5 label,.switch-toggle.switch-5 a {
		width: 20%;
	}
	.switch-toggle.switch-5 input:checked:nth-of-type(2) ~ a {
		left: 20%;
	}
	.switch-toggle.switch-5 input:checked:nth-of-type(3) ~ a {
		left: 40%;
	}
	.switch-toggle.switch-5 input:checked:nth-of-type(4) ~ a {
		left: 60%;
	}
	.switch-toggle.switch-5 input:checked:last-of-type ~ a {
		left: 80%;
	}
	.switch-candy {
		background-color: #2d3035;
		border-radius: 3px;
		color: #fff;
		font-weight: bold;
		text-align: center;
		text-shadow: 1px 1px 1px #191b1e;
		box-shadow: inset 0 2px 6px rgba(0, 0, 0, 0.3), 0 1px 0px
			rgba(255, 255, 255, 0.2);
	}
	.switch-candy label {
		color: #fff;
		-webkit-transition: color 0.2s ease-out;
		-moz-transition: color 0.2s ease-out;
		transition: color 0.2s ease-out;
	}
	.switch-candy input:checked+label {
		color: #333;
		text-shadow: 0 1px 0 rgba(255, 255, 255, 0.5);
	}
	.switch-candy a {
		border: 1px solid #333;
		background-color: #70c66b;
		border-radius: 3px;
		background-image: -webkit-linear-gradient(top, rgba(255, 255, 255, 0.2),
			rgba(0, 0, 0, 0));
		background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0.2),
			rgba(0, 0, 0, 0));
		box-shadow: 0 1px 1px rgba(0, 0, 0, 0.2), inset 0 1px 1px
			rgba(255, 255, 255, 0.45);
	}
	.switch-candy>span {
		color: #333;
		text-shadow: none;
	}
	.switch-candy span {
		color: #fff;
	}
	.switch-candy.switch-candy-blue a {
		background-color: #38a3d4;
	}
	.switch-candy.switch-candy-yellow a {
		background-color: #f5e560;
	}
	.switch-android {
		background-color: #464747;
		border-radius: 1px;
		color: #fff;
		box-shadow: inset rgba(0, 0, 0, 0.1) 0 1px 0;
		/* Selected ON switch-light
		 */
	}
	.switch-android label {
		color: #fff;
	}
	.switch-android>span span {
		opacity: 0;
		-webkit-transition: all 0.1s;
		-moz-transition: all 0.1s;
		transition: all 0.1s;
	}
	.switch-android>span span:first-of-type {
		opacity: 1;
	}
	.switch-android a {
		background-color: #666;
		border-radius: 1px;
		box-shadow: inset rgba(255, 255, 255, 0.2) 0 1px 0, inset
			rgba(0, 0, 0, 0.3) 0 -1px 0;
	}
	.switch-android.switch-light input:checked ~ a {
		background-color: #0E88B1;
	}
	.switch-android.switch-light input:checked ~ span span:first-of-type {
		opacity: 0;
	}
	.switch-android.switch-light input:checked ~ span span:last-of-type {
		opacity: 1;
	}
	.switch-android.switch-toggle,.switch-android>span span {
		font-size: 85%;
		text-transform: uppercase;
	}
	.switch-ios.switch-light {
		color: #868686;
	}
	.switch-ios.switch-light a {
		left: 0;
		width: 30px;
		background-color: #fff;
		border: 1px solid #d3d3d3;
		border-radius: 100%;
		-webkit-transition: all 0.3s ease-out;
		-moz-transition: all 0.3s ease-out;
		transition: all 0.3s ease-out;
		box-shadow: inset 0 -3px 3px rgba(0, 0, 0, 0.025), 0 1px 4px
			rgba(0, 0, 0, 0.15), 0 4px 4px rgba(0, 0, 0, 0.1);
	}
	.switch-ios.switch-light>span span {
		width: 100%;
		left: 0;
		opacity: 0;
	}
	.switch-ios.switch-light>span span:first-of-type {
		opacity: 1;
		padding-left: 30px;
	}
	.switch-ios.switch-light>span span:last-of-type {
		padding-right: 30px;
	}
	.switch-ios.switch-light>span:before {
		content: '';
		display: block;
		width: 100%;
		height: 100%;
		position: absolute;
		left: 100px;
		top: 0;
		background-color: #fafafa;
		border: 1px solid #d3d3d3;
		border-radius: 30px;
		-webkit-transition: all 0.5s ease-out;
		-moz-transition: all 0.5s ease-out;
		transition: all 0.5s ease-out;
		box-shadow: inset rgba(0, 0, 0, 0.1) 0 1px 0;
	}
	.switch-ios.switch-light input:checked ~ a {
		left: 100%;
		margin-left: -30px;
	}
	.switch-ios.switch-light input:checked ~ span:before {
		border-color: #53d76a;
		box-shadow: inset 0 0 0 30px #53d76a;
	}
	.switch-ios.switch-light input:checked ~ span span:first-of-type {
		opacity: 0;
	}
	.switch-ios.switch-light input:checked ~ span span:last-of-type {
		opacity: 1;
		color: #fff;
	}
	.switch-ios.switch-toggle {
		background-color: #fafafa;
		border: 1px solid #d3d3d3;
		border-radius: 30px;
		box-shadow: inset rgba(0, 0, 0, 0.1) 0 1px 0;
	}
	.switch-ios.switch-toggle a {
		background-color: #53d76a;
		border-radius: 25px;
		-webkit-transition: all 0.3s ease-out;
		-moz-transition: all 0.3s ease-out;
		transition: all 0.3s ease-out;
	}
	.switch-ios.switch-toggle label {
		color: #868686;
	}
	.switch-ios input:checked+label {
		color: #3a3a3a;
	}
}

/* Bugfix for older Webkit, including mobile Webkit. Adapted from
 * http://css-tricks.com/webkit-sibling-bug/
 */
@media only screen and (-webkit-max-device-pixel-ratio: 2) and
	(max-device-width: 1280px) {
	.switch-light,.switch-toggle {
		-webkit-animation: webkitSiblingBugfix infinite 1s;
	}
}

@
-webkit-keyframes webkitSiblingBugfix {from { -webkit-transform:translate3d(0,
	0, 0);
	
}

to {
	-webkit-transform: translate3d(0, 0, 0);
}

}
.angular-ui-tree-handle {
	background: #f8faff;
	border: 1px solid #dae2ea;
	color: #7c9eb2;
	padding: 10px 10px;
}

.angular-ui-tree-handle:hover {
	color: #438eb9;
	background: #f4f6f7;
	border-color: #dce2e8;
}

.angular-ui-tree-placeholder {
	background: #f0f9ff;
	border: 2px dashed #bed2db;
	-webkit-box-sizing: border-box;
	-moz-box-sizing: border-box;
	box-sizing: border-box;
}

.group-title {
	background-color: #687074 !important;
	color: #FFF !important;
}

.select2-container {
	width: 200px;
}

.btn-primary:hover,.btn-primary:focus,.btn-primary:active,.btn-primary.active,.open .dropdown-toggle.btn-primary
	{
	color: #fff;
	background-color: #f56954;
	border-color: #285e8e;
}

.showinfowithoutdrag {
	width: auto;
	cursor: pointer;
	display: inline-block;
}

/*
 * jQuery File Upload Plugin CSS 1.3.0
 * https://github.com/blueimp/jQuery-File-Upload
 *
 * Copyright 2013, Sebastian Tschan
 * https://blueimp.net
 *
 * Licensed under the MIT license:
 * http://www.opensource.org/licenses/MIT
 */

.fileinput-button {
  position: relative;
  overflow: hidden;
}
.fileinput-button input {
  position: absolute;
  top: 0;
  right: 0;
  margin: 0;
  opacity: 0;
  -ms-filter: 'alpha(opacity=0)';
  font-size: 200px;
  direction: ltr;
  cursor: pointer;
}

/* Fixes for IE < 8 */
@media screen\9 {
  .fileinput-button input {
    filter: alpha(opacity=0);
    font-size: 100%;
    height: 100%;
  }
}
/* Hide Angular JS elements before initializing */
.ng-cloak {
    display: none;
}
.actionButton{
	position: absolute;
top: 0;
width: auto;
padding: 5px 10px;
}

/* Swicth  */


.toggle-bg {
  background: white;
  border-radius: 2em;
  border: 0.12em solid #e6e6e6;
  display: block;
  /* ...So that we can set a height and width */
  float: left;
  /* ...So that it doesn't take up the full width of the page */
  height: 2em;
  /* You can change this later if you want */
  position: relative;
  /* Required to allow the switch to move around */
  width: 3.2em;
  /* This can be changed later as well */
  -webkit-transition-duration: 0.2s;
  -moz-transition-duration: 0.2s;
  transition-duration: 0.2s;
  position: relative;
}
.toggle-bg:hover {
  border-color: #d9d9d9;
}
.toggle-bg.RL {
  background: #00dc61;
  border-color: #00c356;
}
.toggle-bg input {
  margin: 0;
  padding: 0;
  width: 4.8em;
  height: 100%;
  filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=0);
  opacity: 0;
  position: absolute;
  left: 0;
  top: 0;
  cursor: pointer;
  z-index: 2;
  /* We want the input to be over the span.switch, which we'll give a z-index of 1 */
  /*IE*/
  zoom: 1;
  filter: alpha(opacity=0);
  /* initial toggle position */
  /* final relative toggle position */
}
.toggle-bg input:checked ~ .switch {
  left: 0;
}
.toggle-bg input ~ :checked ~ .switch {
  left: 1.18em;
}
.toggle-bg input:checked {
  z-index: 0;
}

.switch {
  background: white;
  border-radius: 2em;
  border: 0.1em solid #d9d9d9;
  display: block;
  float: left;
  height: 1.9em;
  width: 1.9em;
  left: -.1em;
  position: relative;
  -webkit-transition-duration: 0.2s;
  -moz-transition-duration: 0.2s;
  transition-duration: 0.2s;
  z-index: 1;
  /* Remember, it must be below the invisible inputs */
}
.switch.RL {
  box-shadow: -0.2em 0.2em 0.5em rgba(0, 0, 0, 0.06), 0.4em 0.4em 1.5em rgba(0, 0, 0, 0.08);
}
.switch.CL {
  box-shadow: 0.2em 0.2em 0.5em rgba(0, 0, 0, 0.06), -0.4em 0.4em 1.5em rgba(0, 0, 0, 0.08);
}

.toggle-alternate {
  clear: both;
  margin: 1em 0 0;
  width: 4.48em;
  float: right;
}
.toggle-alternate input {
  width: 6.24em;
}
.toggle-alternate input ~ :checked ~ .switch {
  left: 2.46em;
}

.toggle-alternate label {
  font-weight: 300;
  font-size: .9em;
  text-transform: uppercase;
  position: absolute;
  top: 0.45em;
}

.toggle-bg label.RL {
  left: .75em;
  color: white;
  text-shadow: 0 0.1em 0 #00dc61;
}

.toggle-bg label.CL {
  right: .55em;
  color: #aaa;
}
.ui-autocomplete {
    z-index: 1051; /* z-index of modal is equal to 1050. */
}
